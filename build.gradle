/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven'
    id 'groovy'
}

repositories {
    mavenLocal()

    maven {
        url = 'https://repo.jenkins-ci.org/releases/'
    }
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
    maven {
        url = 'https://repo.spring.io/plugins-release/'
    }
}

configurations {
    ivy
}

dependencies {
    ivy 'org.apache.ivy:ivy:2.4.0'
    implementation 'org.codehaus.groovy:groovy-all:2.5.6'
    implementation 'com.cloudbees:groovy-cps:1.25'
    implementation 'org.jenkins-ci.main:jenkins-core:2.168@jar'
    implementation 'org.jenkins-ci.plugins:junit:1.27@jar'
    implementation 'org.jenkins-ci.plugins:git:3.9.3@jar'
    implementation 'org.jenkins-ci.plugins:mailer:1.23@jar'
    implementation 'org.jenkins-ci.plugins:structs:1.14@jar'
    implementation 'org.jenkins-ci.plugins.workflow:workflow-step-api:2.19@jar'
    implementation 'org.jenkins-ci.plugins.workflow:workflow-cps:2.64@jar'
    implementation 'org.jenkins-ci.plugins.workflow:workflow-api:2.33@jar'
    implementation 'org.jenkins-ci.plugins.workflow:workflow-job:2.32@jar'
    implementation 'org.jenkins-ci.plugins.workflow:workflow-multibranch:2.21@jar'
    implementation 'org.jenkinsci.plugins:pipeline-model-definition:1.3.4.1@jar'
    implementation 'org.kohsuke.stapler:stapler:1.256'
    implementation 'org.acegisecurity:acegi-security:1.0.7'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'com.thoughtworks.xstream:xstream:1.4.11.1'

    testImplementation "junit:junit:4.12"
    testImplementation "com.lesfurets:jenkins-pipeline-unit:1.1"
    testImplementation 'org.apache.commons:commons-lang3:3.8.1'
    testImplementation 'org.awaitility:awaitility:3.1.6'
    testImplementation 'org.hamcrest:hamcrest:2.1'
}

sourceSets {
    main {
        groovy {
            srcDirs = ["src/org/zowe"]
        }
    }
    test {
        groovy {
            srcDirs = ["src/test/groovy"]
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
    }
}
group = 'org.zowe'
version = '1.4.0'
description = 'zowe-jenkins-library'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(GroovyCompile) {
    groovyClasspath += configurations.ivy
}

test {
    // pass system property
    for (prop in [
        'logLevel',
        'jenkins.baseuri',
        'jenkins.user',
        'jenkins.password',
        'jenkins.crumb',
        'library.branch',
        'github.username',
        'github.email',
        'github.credential',
        'npm.username',
        'npm.email',
        'npm.credential',
        'artifactory.url',
        'artifactory.credential',
        'pax.server.host',
        'pax.server.port',
        'pax.server.crdential',
        'signing.key.passphrase',
        'signing.key.file',
        'docker.registry',
        'docker.credential',
        'docker.imageprefix'
    ]) {
        systemProperty prop, project.getProperty(prop)
    }

    // delete old test reports
    dependsOn cleanTest

    // minimize logging
    testLogging.maxGranularity = 0

    // show stdout from tests
    onOutput { dest, event -> print event.message }

    // show test results
    def results = []
    afterTest { desc, result -> println "${desc.className.split("\\.")[-1]}: " +
        "${desc.name}: ${result.resultType}" }
    afterSuite { desc, result -> if (desc.className) { results << result } }

    // show summary
    doLast {
        println "Tests: ${results.sum { it.testCount }}" +
            ", Failures: ${results.sum { it.failedTestCount }}" +
            ", Errors: ${results.sum { it.exceptions.size() }}" +
            ", Skipped: ${results.sum { it.skippedTestCount }}"
    }
}

groovydoc {
    source             sourceSets.main.groovy
    includes           ["org.zowe.*"]
}
